<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- 配置Bean -->
	<!-- class:全类名, 通过反射的 方式在IOC，容器中创建Bean，所以要求bean中必须有无参的构造器  -->
	<bean id="hello2" class="com.atguigu.spring.beans.Helloworld">
		<property name="name" value="Spring"></property>
	</bean>
	
	<!-- 通过构造器注入 -->
	<!-- 使用构造器注入属性值，可以指定参数的位置和参数的类型！以区分重载的构造器！ -->
	<bean id="car" class="com.atguigu.spring.beans.Car">
		<constructor-arg value="Audi" index="0"></constructor-arg>
		<constructor-arg value="shanghai" index="1"></constructor-arg>
		<constructor-arg value="100000" index="2"></constructor-arg>
	</bean>
	
	<bean id="car2" class="com.atguigu.spring.beans.Car">
		<constructor-arg value="BMW" index="0"></constructor-arg>
		<!-- 如果字面值包含特殊字符，可以使用<![CDATA[]]>包裹起来 -->
		<!-- 属性值也可以使用value直接进行配置 -->
		<constructor-arg>
			<value><![CDATA[<shanghai^>]]></value>
		</constructor-arg>
		<constructor-arg value="50.0" type="double"></constructor-arg>
	</bean>
	
	
	<bean id="person" class="com.atguigu.spring.beans.Person">
		<property name="name" value="Tom"></property>
		<property name="age" value="12"></property>
		<!-- 
		<property name="car" ref="car2"></property>
		 -->
		 <!-- 
		<property name="car">
			<ref bean="car2"/>
		</property>
		 -->
		<property name="car">
			<!-- 内部bean，不能被外部引用，只能内部使用 -->
			<bean class="com.atguigu.spring.beans.Car">
				<constructor-arg value="Ford" />
				<constructor-arg value="Changan" />
				<constructor-arg value="20000" type="double" />				
			</bean>
		</property>
		<property name="car.price" value="30"></property>
	</bean>
	
	<bean name="person2" class="com.atguigu.spring.beans.Person">
		<constructor-arg value="Jerry" />
		<constructor-arg value="22" />
		<!-- 
		<constructor-arg ref="car2" />
		 -->
		 <!-- 测试赋值null,null值的专有标记 -->
		 <!-- 
		<constructor-arg><null/></constructor-arg>
		 -->
		<!-- 为级联属性赋值,注意：属性需要先初始化后，才可以为级联属性赋值，否则会有异常，和Struts2不同 -->
		<constructor-arg ref="car2" />
		<property name="car.price" value="20000"></property>
	</bean>
	
	<!-- 测试如何配置集合属性 -->
	<bean id="person3" class="com.atguigu.spring.beans.collections.Person">
		<property name="name" value="Jobs" />
		<property name="age" value="45" />
		<property name="cars">
			<!-- 使用list节点为list类型的属性赋值 -->
			<list>
				<ref bean="car"/>
				<ref bean="car2"/>
				<bean class="com.atguigu.spring.beans.Car">
					<constructor-arg value="Ford" />
					<constructor-arg value="Changan" />
					<constructor-arg value="20000" type="double" />				
				</bean>
			</list>
		</property>
	</bean>
	<bean id="person4" class="com.atguigu.spring.beans.collections.NewPerson">
		<property name="name" value="Jobs" />
		<property name="age" value="45" />
		<property name="cars">
			<!-- 使用map节点及map的直接点entry 配置map类型的成员变量 -->
			<map>
				<entry key="car1" value-ref="car"></entry>
				<entry key="car2" value-ref="car2"></entry>
				<entry key="car3">
					<bean class="com.atguigu.spring.beans.Car">
						<property name="brand" value="Nice"></property>
						<property name="corp" value=""></property>
						<property name="price" value="120000"></property>
						<property name="maxSpeed" value="69.0"></property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- 配置Properties属性值 -->
	<bean id="dataSource" class="com.atguigu.spring.beans.collections.DataSource">
		<!-- 使用props和prop子节点来为properties属性赋值 -->
		<property name="properties">
			<props>
				<prop key="user">root</prop>
				<prop key="password">m123</prop>
				<prop key="jdbcUrl">jdbc:mysql:///test</prop>
				<prop key="driverClass">com.mysql.jdbc.Driver</prop>
			</props>
		</property>
	</bean>
	
	<!-- 配置单例的集合bean，以供多个bean进行引用 -->
	<util:list id="cars">
		<ref bean="car"/>
		<ref bean="car2" />
	</util:list>
	
	<bean id="person5" class="com.atguigu.spring.beans.collections.Person">
		<property name="name" value="Jack"></property>
		<property name="age" value="29"></property>
		<property name="cars" ref="cars"></property>
	</bean>
	
	<!-- 通过p命名空间为bean的属性赋值，需要先导入p命名空间，相对于传统的范式更加简洁 -->
	<bean id="person6" class="com.atguigu.spring.beans.collections.Person" p:name="Queen" p:age="18" p:cars-ref="cars"></bean>
</beans>
